/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package login;

import connection.dbconnect;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Sithum Jayasekara
 */

public class Todolist_JFrame extends javax.swing.JFrame {

    /**
     * Creates new form TodolistJFrame
     */
    
    dbconnect db;
    Connection conn;

    JFrame frame;
    private JTextField word_textField;
    Statement stmt = null;
    private JTable table;
    DefaultTableModel dtm;

    public Todolist_JFrame() {
        initComponents();
        tableData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_task = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btn_home = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        txt_search = new javax.swing.JTextField();
        btn_search = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btn_delete = new javax.swing.JButton();
        btn_update = new javax.swing.JButton();
        txt_task = new javax.swing.JTextField();
        btn_add = new javax.swing.JButton();
        txt_due_date = new javax.swing.JTextField();
        combo_status = new javax.swing.JComboBox<String>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setOpaque(false);
        jPanel4.setPreferredSize(new java.awt.Dimension(695, 500));

        table_task.setBackground(new java.awt.Color(220, 220, 220));
        table_task.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        table_task.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Task Name", "Due Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table_task.setOpaque(false);
        table_task.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_taskMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table_task);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        jPanel1.setBackground(new java.awt.Color(148, 243, 116));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Calibri", 1, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Todolist");

        btn_home.setBackground(new java.awt.Color(0, 144, 8));
        btn_home.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        btn_home.setForeground(new java.awt.Color(255, 255, 255));
        btn_home.setText("Home");
        btn_home.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_homeActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(201, 254, 201));
        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel2.setToolTipText("");
        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.setInheritsPopupMenu(true);

        txt_search.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        txt_search.setText(" Search");
        txt_search.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txt_search.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_searchFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_searchFocusLost(evt);
            }
        });
        txt_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_searchKeyReleased(evt);
            }
        });

        btn_search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/search_icon.png"))); // NOI18N
        btn_search.setContentAreaFilled(false);
        btn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_search, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_search, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                    .addComponent(txt_search))
                .addGap(6, 6, 6))
        );

        jPanel3.setBackground(new java.awt.Color(201, 254, 201));
        jPanel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel3.setToolTipText("");
        jPanel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel3.setInheritsPopupMenu(true);
        jPanel3.setPreferredSize(new java.awt.Dimension(665, 49));

        btn_delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/delete_icon.png"))); // NOI18N
        btn_delete.setContentAreaFilled(false);
        btn_delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteActionPerformed(evt);
            }
        });

        btn_update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/update_icon.png"))); // NOI18N
        btn_update.setContentAreaFilled(false);
        btn_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_updateActionPerformed(evt);
            }
        });

        txt_task.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        txt_task.setText(" Type the task ");
        txt_task.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txt_task.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_taskFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_taskFocusLost(evt);
            }
        });
        txt_task.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_taskMouseClicked(evt);
            }
        });

        btn_add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/add_icon.png"))); // NOI18N
        btn_add.setContentAreaFilled(false);
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        txt_due_date.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        txt_due_date.setText(" Due date");
        txt_due_date.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        txt_due_date.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_due_dateFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_due_dateFocusLost(evt);
            }
        });
        txt_due_date.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_due_dateMouseClicked(evt);
            }
        });

        combo_status.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        combo_status.setModel(new javax.swing.DefaultComboBoxModel<String>(new String[] { "Incomplete", "Complete" }));
        combo_status.setBorder(null);
        combo_status.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txt_task, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_due_date, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combo_status, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(btn_delete, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(btn_update, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_task)
                    .addComponent(btn_delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_update, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_add, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(combo_status)
                    .addComponent(txt_due_date, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_home, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_home, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 709, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_homeActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new MainWindow_JFrame().show();
    }//GEN-LAST:event_btn_homeActionPerformed

    private void btn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchActionPerformed
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_btn_searchActionPerformed

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        // TODO add your handling code here:
        db = new dbconnect();
        conn = db.connect();
        String task = txt_task.getText();
        String date = txt_due_date.getText();
        String com_status = combo_status.getSelectedItem().toString();

        int status = 0;

        if (!com_status.equals("Incomplete")) {
            status = 1;
        }

        try {
            String sql0 = "SELECT * FROM todolist WHERE task = '" + task + "'";
            stmt = conn.createStatement();
            com.mysql.jdbc.ResultSet rs = (com.mysql.jdbc.ResultSet) stmt.executeQuery(sql0);

            if (rs.next()) {
                JOptionPane.showMessageDialog(null,
                        "This word is already in the data set.\nYou can not add this.\nYou can only update it.");
            } else if (task.trim().length() != 0) {
                String sql = "INSERT INTO todolist(`task`, `dueDate`, `status`) VALUES ('" + task + "','" + date + "','" + status + "') ";
                stmt = conn.createStatement();
                stmt.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "successfully added to the database !");
                tableData();
                clear();
            } else if (task.trim().length() == 0) {
                JOptionPane.showMessageDialog(null, "You need to type a word !");
            } else {
                JOptionPane.showMessageDialog(null, "You need to type the meaning !");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Something wrong !");
        }
    }//GEN-LAST:event_btn_addActionPerformed

    private void txt_taskFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_taskFocusGained
        // TODO add your handling code here:
//        if (txt_task.getText().equals(" Type the task ")) {
//            txt_task.setText("");
//        }
    }//GEN-LAST:event_txt_taskFocusGained

    private void txt_taskFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_taskFocusLost
        // TODO add your handling code here:
        if (txt_task.getText().equals("")) {
            txt_task.setText(" Type the task ");
        }
    }//GEN-LAST:event_txt_taskFocusLost

    private void txt_due_dateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_due_dateFocusGained
        // TODO add your handling code here:
        if (txt_due_date.getText().equals(" Due date")) {
            txt_due_date.setText("");
        }
    }//GEN-LAST:event_txt_due_dateFocusGained

    private void txt_due_dateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_due_dateFocusLost
        // TODO add your handling code here:
        if (txt_due_date.getText().equals("")) {
            txt_due_date.setText(" Due date");
        }
    }//GEN-LAST:event_txt_due_dateFocusLost

    private void btn_deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteActionPerformed
        // TODO add your handling code here:
        db = new dbconnect();
        conn = db.connect();

        dtm = (DefaultTableModel) table_task.getModel();
        int selectedIndex = table_task.getSelectedRow();

        if (selectedIndex != -1) {

            String id = dtm.getValueAt(selectedIndex, 0).toString();

            try {
                String query = "DELETE FROM todolist WHERE taskNo= '" + id + "'";
                stmt = conn.createStatement();
                stmt.executeUpdate(query);

                JOptionPane.showMessageDialog(this, "Successfull deleted");
                tableData();
                clear();
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Something wrong !");
            }

        } else {
            JOptionPane.showMessageDialog(this, "First you select task");
        }
    }//GEN-LAST:event_btn_deleteActionPerformed

    private void btn_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_updateActionPerformed
        // TODO add your handling code here:
        db = new dbconnect();
        conn = db.connect();
        String task = txt_task.getText();
        String date = txt_due_date.getText();
        String com_status = combo_status.getSelectedItem().toString();

        int status = 0;

        if (!com_status.equals("Incomplete")) {
            status = 1;
        }

        try {
            String sql0 = "SELECT * FROM todolist WHERE task = '" + task + "'";
            stmt = conn.createStatement();
            ResultSet rs = (ResultSet) stmt.executeQuery(sql0);

            if (rs.next()) {
                if (task.trim().length() != 0) {
                    String sql = "UPDATE todolist set dueDate = '" + date + "',status = '" + status + "' WHERE task = '" + task + "'";
                    stmt = conn.createStatement();
                    stmt.executeUpdate(sql);
                    JOptionPane.showMessageDialog(null, "successfully updated the database!");
                    tableData();
                    clear();
                    txt_task.requestFocus();
                } else {
                    JOptionPane.showMessageDialog(null, "Enter the new task !");
                }
            } else if (task.trim().length() == 0) {
                JOptionPane.showMessageDialog(null, "You need to type a tast !");
            } else {
                JOptionPane.showMessageDialog(null, "This word is not in the database !");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Something wrong !");
        }
    }//GEN-LAST:event_btn_updateActionPerformed

    private void table_taskMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_taskMouseClicked
        // TODO add your handling code here:
        dtm = (DefaultTableModel) table_task.getModel();
        int selectedIndex = table_task.getSelectedRow();

        String data = dtm.getValueAt(selectedIndex, 1).toString();
        String date = dtm.getValueAt(selectedIndex, 2).toString();
        txt_task.setText(data);
        txt_due_date.setText(date);
    }//GEN-LAST:event_table_taskMouseClicked

    private void txt_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyReleased
        // TODO add your handling code here:
        String query = txt_search.getText();
        updateFilter(query);
    }//GEN-LAST:event_txt_searchKeyReleased

    private void txt_searchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_searchFocusGained
        // TODO add your handling code here:
        if (txt_search.getText().equals(" Search")) {
            txt_search.setText("");
        }
    }//GEN-LAST:event_txt_searchFocusGained

    private void txt_searchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_searchFocusLost
        // TODO add your handling code here:
        if (txt_search.getText().equals("")) {
            txt_search.setText(" Search");
        }
    }//GEN-LAST:event_txt_searchFocusLost

    private void txt_taskMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_taskMouseClicked
        // TODO add your handling code here:
        if (!txt_task.getText().equals("")) {
            txt_task.setText("");
        }
    }//GEN-LAST:event_txt_taskMouseClicked

    private void txt_due_dateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_due_dateMouseClicked
        // TODO add your handling code here:
        if (!txt_due_date.getText().equals("")) {
            txt_due_date.setText("");
        }
    }//GEN-LAST:event_txt_due_dateMouseClicked

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Todolist_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Todolist_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Todolist_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Todolist_JFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Todolist_JFrame().setVisible(true);
            }
        });
    }

    private void tableData() {
        // TODO add your handling code here:
        db = new dbconnect();
        conn = db.connect();
        DefaultTableModel dtm = (DefaultTableModel) table_task.getModel();
        dtm.setRowCount(0);
        Vector v;
        String query = "SELECT * FROM todolist";
        String stat = "Incomplete";
        try {
            stmt = conn.createStatement();
            com.mysql.jdbc.ResultSet rs = (com.mysql.jdbc.ResultSet) stmt.executeQuery(query);

            while (rs.next()) {
                v = new Vector();
                String taskNo = rs.getString("taskNo");
                String task = rs.getString("task");
                String dueDate = rs.getString("dueDate");
                String status = rs.getString("status");
                v.add(taskNo);
                v.add(task);
                v.add(dueDate);

                if (status.equals("1")) {
                    stat = "Complete";
                }
                v.add(stat);

                dtm.addRow(v);
                stat = "Incomplete";
            }

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Something wrong !");
        }
    }

    private void updateFilter(String query) {  // 
        dtm = (DefaultTableModel) table_task.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(dtm);
        table_task.setRowSorter(tr);

        // Assuming "word" column is at index 1
        int columnIndexToFilter = 1;

        tr.setRowFilter(RowFilter.regexFilter("(?i)" + query, columnIndexToFilter));
    }

    private void clear() {  // It uses for form clear
        tableData();
        txt_task.setText(" Type the task ");
        txt_due_date.setText(" Due date");
        combo_status.setSelectedIndex(0);
        txt_search.setText(" Search");
        updateFilter("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_delete;
    private javax.swing.JButton btn_home;
    private javax.swing.JButton btn_search;
    private javax.swing.JButton btn_update;
    private javax.swing.JComboBox<String> combo_status;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable table_task;
    private javax.swing.JTextField txt_due_date;
    private javax.swing.JTextField txt_search;
    private javax.swing.JTextField txt_task;
    // End of variables declaration//GEN-END:variables
}
